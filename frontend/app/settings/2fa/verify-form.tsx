"use client";
import { enableTwoFactorAuthentication } from "@/app/lib/actions";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { useRouter } from "next/navigation";
import { useState } from "react";
import { useFormState, useFormStatus } from "react-dom";

export default function TwoFactorAuthVerifyForm() {
  const [response, action] = useFormState(enableTwoFactorAuthentication, "");
  const { pending } = useFormStatus();
  const [code, setCode] = useState("");
  const validateOnChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    // Exclude non-numeric characters
    e.target.value = e.target.value.replace(/\D/g, "");
    // Trim to 6 characters
    if (e.target.value.length > 6) {
      e.target.value = e.target.value.slice(0, 6);
    }
    setCode(e.target.value);
  };
  const validateOnKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {
    // if key is valid as input type number, but not actual number
    // or if input length is longer than 6
    if ("eE+-.".includes(e.key)) {
      e.preventDefault();
    }
  };
  const disabled = pending || code.length != 6;
  const router = useRouter();
  if (response === "Success") {
    router.refresh();
  }
  return (
    <form action={action}>
      <div className="flex flex-col gap-2">
        <div className="font-bold text-sm">
          Enter the 6-digit authentication code generated by your app
        </div>
        <Input
          type="number"
          inputMode="numeric"
          minLength={6}
          id="code"
          name="code"
          placeholder="6-digit Code"
          aria-label="Enter the 6-digit authentication code generated by your app"
          onChange={validateOnChange}
          onKeyDown={validateOnKeyDown}
          // This is a hack to remove the spinner from the input
          className="[appearance:textfield] [&::-webkit-outer-spin-button]:appearance-none [&::-webkit-inner-spin-button]:appearance-none"
        />
        <Button type="submit" aria-disabled={disabled} disabled={disabled}>
          Verify
        </Button>
        {response && response !== "Success" && (
          <div className="text-red-500">{response}</div>
        )}
      </div>
    </form>
  );
}
